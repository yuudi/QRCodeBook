name: Tests

on:
  push:
    paths:
      - "**/*.go"

  pull_request:
    paths:
      - "**/*.go"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-1.24-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-1.24-

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run vet
        run: go vet ./...

      - name: Run tests
        run: go test ./... -v -race -coverprofile=coverage.out

      - name: Generate coverage report
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-go1.24
          path: |
            coverage.out
            coverage.html
          retention-days: 30

      - name: Check code formatting
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted correctly:"
            gofmt -s -l .
            exit 1
          fi

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"

      - name: Run gosec security scanner
        uses: securecodewarrior/github-action-gosec@master
        with:
          args: "-fmt sarif -out gosec-results.sarif ./..."

      - name: Upload SARIF file
        uses: actions/upload-artifact@v4
        with:
          sarif_file: gosec-results.sarif
